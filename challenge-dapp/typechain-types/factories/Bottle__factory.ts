/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Bottle, BottleInterface } from "../Bottle";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getMessage",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "setMessage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000d2138038062000d21833981810160405281019062000037919062000278565b6200006760405180606001604052806024815260200162000cfd60249139826200008760201b6200027a1760201c565b80600090805190602001906200007f92919062000156565b5050620004c5565b620001298282604051602401620000a0929190620002fe565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506200012d60201b60201c565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546200016490620003ea565b90600052602060002090601f016020900481019282620001885760008555620001d4565b82601f10620001a357805160ff1916838001178555620001d4565b82800160010185558215620001d4579182015b82811115620001d3578251825591602001919060010190620001b6565b5b509050620001e39190620001e7565b5090565b5b8082111562000202576000816000905550600101620001e8565b5090565b60006200021d620002178462000362565b62000339565b9050828152602081018484840111156200023657600080fd5b62000243848285620003b4565b509392505050565b600082601f8301126200025d57600080fd5b81516200026f84826020860162000206565b91505092915050565b6000602082840312156200028b57600080fd5b600082015167ffffffffffffffff811115620002a657600080fd5b620002b4848285016200024b565b91505092915050565b6000620002ca8262000398565b620002d68185620003a3565b9350620002e8818560208601620003b4565b620002f381620004b4565b840191505092915050565b600060408201905081810360008301526200031a8185620002bd565b90508181036020830152620003308184620002bd565b90509392505050565b60006200034562000358565b905062000353828262000420565b919050565b6000604051905090565b600067ffffffffffffffff82111562000380576200037f62000485565b5b6200038b82620004b4565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b60005b83811015620003d4578082015181840152602081019050620003b7565b83811115620003e4576000848401525b50505050565b600060028204905060018216806200040357607f821691505b602082108114156200041a576200041962000456565b5b50919050565b6200042b82620004b4565b810181811067ffffffffffffffff821117156200044d576200044c62000485565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b61082880620004d56000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063368b87721461003b578063ce6d41de14610057575b600080fd5b610055600480360381019061005091906104e9565b610075565b005b61005f61013c565b60405161006c9190610563565b60405180910390f35b61012260405180606001604052806031815260200161078f603191396000805461009e906106bc565b80601f01602080910402602001604051908101604052809291908181526020018280546100ca906106bc565b80156101175780601f106100ec57610100808354040283529160200191610117565b820191906000526020600020905b8154815290600101906020018083116100fa57829003601f168201915b505050505083610316565b80600090805190602001906101389291906103de565b5050565b60606101ea6040518060600160405280603381526020016107c06033913960008054610167906106bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610193906106bc565b80156101e05780601f106101b5576101008083540402835291602001916101e0565b820191906000526020600020905b8154815290600101906020018083116101c357829003601f168201915b505050505061027a565b600080546101f7906106bc565b80601f0160208091040260200160405190810160405280929190818152602001828054610223906106bc565b80156102705780601f1061024557610100808354040283529160200191610270565b820191906000526020600020905b81548152906001019060200180831161025357829003601f168201915b5050505050905090565b6103128282604051602401610290929190610585565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103b5565b5050565b6103b083838360405160240161032e939291906105bc565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103b5565b505050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546103ea906106bc565b90600052602060002090601f01602090048101928261040c5760008555610453565b82601f1061042557805160ff1916838001178555610453565b82800160010185558215610453579182015b82811115610452578251825591602001919060010190610437565b5b5090506104609190610464565b5090565b5b8082111561047d576000816000905550600101610465565b5090565b600061049461048f8461062d565b610608565b9050828152602081018484840111156104ac57600080fd5b6104b784828561067a565b509392505050565b600082601f8301126104d057600080fd5b81356104e0848260208601610481565b91505092915050565b6000602082840312156104fb57600080fd5b600082013567ffffffffffffffff81111561051557600080fd5b610521848285016104bf565b91505092915050565b60006105358261065e565b61053f8185610669565b935061054f818560208601610689565b6105588161077d565b840191505092915050565b6000602082019050818103600083015261057d818461052a565b905092915050565b6000604082019050818103600083015261059f818561052a565b905081810360208301526105b3818461052a565b90509392505050565b600060608201905081810360008301526105d6818661052a565b905081810360208301526105ea818561052a565b905081810360408301526105fe818461052a565b9050949350505050565b6000610612610623565b905061061e82826106ee565b919050565b6000604051905090565b600067ffffffffffffffff8211156106485761064761074e565b5b6106518261077d565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b82818337600083830152505050565b60005b838110156106a757808201518184015260208101905061068c565b838111156106b6576000848401525b50505050565b600060028204905060018216806106d457607f821691505b602082108114156106e8576106e761071f565b5b50919050565b6106f78261077d565b810181811067ffffffffffffffff821117156107165761071561074e565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fe5265706c6163696e67206d65737361676520696e2074686520626f74746c652066726f6d202725732720746f2027257327596f75207265616420746865206d65737361676520696e2074686520626f74746c652c20616e6420697420736179733a202573a264697066735822122076c459f10d8374ed5a4bf658d9e298374d57b01b603415e62602fe89d9ccfdcf64736f6c634300080400334465706c6f79696e67206120626f74746c65207769746820746865206d6573736167653a";

type BottleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BottleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Bottle__factory extends ContractFactory {
  constructor(...args: BottleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _message: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Bottle> {
    return super.deploy(_message, overrides || {}) as Promise<Bottle>;
  }
  override getDeployTransaction(
    _message: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_message, overrides || {});
  }
  override attach(address: string): Bottle {
    return super.attach(address) as Bottle;
  }
  override connect(signer: Signer): Bottle__factory {
    return super.connect(signer) as Bottle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BottleInterface {
    return new utils.Interface(_abi) as BottleInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Bottle {
    return new Contract(address, _abi, signerOrProvider) as Bottle;
  }
}
